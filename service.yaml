tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: "kubetos"
  template_author: "shishqa"
  template_version: "1.0"

imports:
  - profiles/openstack/main.yaml
  - profiles/cri/main.yaml
  - profiles/cni/main.yaml
  - profiles/etcd/main.yaml
  - profiles/kubernetes/main.yaml

topology_template:
  node_templates:
    sg:
      type: openstack.nodes.SecurityGroup
      properties:
        name: shishqa-test-sg-opera
        description: sg created from xOpera

    sg_rule_tcp:
      type: openstack.nodes.SecurityGroupRule
      properties:
        protocol: tcp
        remote_ip_prefix: 0.0.0.0/0
      requirements:
        - security_group: sg

    sg_rule_udp:
      type: openstack.nodes.SecurityGroupRule
      properties:
        protocol: udp
        remote_ip_prefix: 0.0.0.0/0
      requirements:
        - security_group: sg

    sg_rule_icmp:
      type: openstack.nodes.SecurityGroupRule
      properties:
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0
      requirements:
        - security_group: sg

    compute:
      type: openstack.nodes.Compute
      properties:
        name: shishqa-test-1--control-plane
        image: "Ubuntu Server 20.04 LTS (Focal Fossa)"
        flavor: Standard1.small.s50
        network: net-for-intra-sandbox
        floating_ip_pool: ispras
        key_name: shishqa
      requirements:
        - security_group: sg
      artifacts:
        ssh_key: id_rsa

    runc:
      type: kubetos.nodes.Runc
      capabilities:
        oci:
          properties:
            name: runc
            path: /usr/sbin/runc
            root: /run/runc
      requirements:
        - host: compute

    kata:
      type: kubetos.nodes.Kata
      capabilities:
        oci:
          properties:
            name: kata
            path: /opt/kata/bin/kata-runtime
            root: /run/kata-containers
      requirements:
        - host: compute

    cni:
      type: kubetos.nodes.CNI
      capabilities:
        cni:
          properties:
            version: v0.9.1
            binary_dir: /opt/cni/bin
            config_dir: /etc/cni/net.d
      requirements:
        - host: compute

    cni_bridge:
      type: kubetos.nodes.CNI.Plugin.Bridge
      properties:
        cni_version: 0.4.0
        name: br
        pod_cidr: 10.200.0.0/16
      requirements:
        - cni: cni
        - host: compute

    cni_loopback:
      type: kubetos.nodes.CNI.Plugin.Loopback
      properties:
        cni_version: 0.4.0
        name: lo
      requirements:
        - cni: cni
        - host: compute

    crio:
      type: kubetos.nodes.CRI-O
      capabilities:
        cri:
          properties:
            url_path: /var/run/crio/crio.sock
      requirements:
        - host: compute
        - oci_runtime: runc
        - oci_runtime: kata
        - cni: cni

    crictl:
      type: kubetos.nodes.Crictl
      properties:
        version: { concat: [ 'v', { get_property: [ SELF, cri_runtime, version ] }, '.0' ] }
      requirements:
        - host: compute
        - cri_runtime: crio

    kubelet:
      type: kubetos.nodes.Kubelet
      capabilities:
        static_pod_host:
          properties:
            path: /etc/kubernetes/manifests
      properties:
        version: { concat: [ 'v', { get_property: [ SELF, cri_runtime, version ] }, '.0' ] }
      requirements:
        - host: compute
        - cri_runtime: crio

    kubectl:
      type: kubetos.nodes.Kubectl
      properties:
        version: v1.21.0
      requirements:
        - host: compute

    compute_etcd:
      type: openstack.nodes.Compute
      properties:
        name: shishqa-test-1--etcd
        image: "Ubuntu Server 20.04 LTS (Focal Fossa)"
        flavor: Standard1.small.s50
        network: net-for-intra-sandbox
        floating_ip_pool: ispras
        key_name: shishqa
      requirements:
        - security_group: sg

    etcd:
      type: kubetos.nodes.Etcd
      capabilities:
        access_address:
          properties:
            port: 2379
            api_version: v2
        peer_address:
          properties:
            port: 2380
      requirements:
        - host: compute_etcd

    apiserver:
      type: kubetos.nodes.Kube.APIServer
      capabilities:
        access_address:
          properties:
            port: 6443
      properties:
        version: v1.21.0
      requirements:
        - host: kubelet
        - etcd: etcd

    scheduler:
      type: kubetos.nodes.Kube.Scheduler
      properties:
        version: v1.21.0
        config_path: /etc/kubernetes/kube-scheduler.yaml
      requirements:
        - host: kubelet
        - apiserver:
            node: apiserver
            relationship: scheduler_to_apiserver

    controller_manager:
      type: kubetos.nodes.Kube.ControllerManager
      properties:
        version: v1.21.0
        cluster_cidr: 10.233.64.0/18
        service_cidr: 10.233.0.0/18
      requirements:
        - host: kubelet
        - apiserver:
            node: apiserver
            relationship: controller_manager_to_apiserver

  relationship_templates:

    scheduler_to_apiserver:
      type: kubetos.relationships.ConnectsToAPIServer
      properties:
        kubeconfig_path: /etc/kubernetes/scheduler.conf
        cluster_name: test
        user: system:kube-scheduler
        ca_path: /etc/kubernetes/certs/ca.pem
        cert_path: /etc/kubernetes/certs/kube-scheduler.pem
        key_path: /etc/kubernetes/certs/kube-scheduler-key.pem

    controller_manager_to_apiserver:
      type: kubetos.relationships.ConnectsToAPIServer
      properties:
        kubeconfig_path: /etc/kubernetes/controller-manager.conf
        cluster_name: test
        user: system:kube-controller-manager
        ca_path: /etc/kubernetes/certs/ca.pem
        cert_path: /etc/kubernetes/certs/kube-controller-manager.pem
        key_path: /etc/kubernetes/certs/kube-controller-manager-key.pem

