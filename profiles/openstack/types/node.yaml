tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  openstack.nodes.SecurityGroup:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
      description:
        type: string
        required: false
    attributes:
      id:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              name: { value: { get_property: [ SELF, name ] }, type: string }
              description: { value: { get_property: [ SELF, description ] }, type: string }
            implementation: ../ansible/group--create.yaml

  openstack.nodes.SecurityGroupRule:
    derived_from: tosca.nodes.Root
    properties:
      protocol:
        type: string
      remote_ip_prefix:
        type: string
    attributes:
      id:
        type: string
    requirements:
      - security_group:
          node: openstack.nodes.SecurityGroup
          capability: tosca.capabilities.Node
          relationship: tosca.relationships.DependsOn
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              security_group: { value: { get_property: [ SELF, security_group, name ] }, type: string }
              protocol: { value: { get_property: [ SELF, protocol ] }, type: string }
              remote_ip_prefix: { value: { get_property: [ SELF, remote_ip_prefix ] }, type: string }
            implementation: ../ansible/group-rule--create.yaml

  openstack.nodes.Compute:
    derived_from: tosca.nodes.Compute
    properties:
      name:
        type: string
      image:
        type: string
      flavor:
        type: string
      network:
        type: string
      floating_ip_pool:
        type: string
      key_name:
        type: string
    attributes:
      id:
        type: string
      security_groups:
        type: list
        entry_schema:
          type: string
        default: []
    requirements:
      - security_group:
          node: openstack.nodes.SecurityGroup
          capability: tosca.capabilities.Node
          relationship: openstack.relationships.ComputeToSecurityGroup
          occurrences: [ 1, UNBOUNDED ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              vm_name: { value: { get_property: [ SELF, name ] }, type: string }
              image: { value: { get_property: [ SELF, image ] }, type: string }
              flavor: { value: { get_property: [ SELF, flavor ] }, type: string }
              network: { value: { get_property: [ SELF, network ] }, type: string }
              floating_ip_pool: { value: { get_property: [ SELF, floating_ip_pool ] }, type: string }
              key_name: { value: { get_property: [ SELF, key_name ] }, type: string }
              security_groups: { value: { get_attribute: [ SELF, security_group, name ] }, type: list }
            outputs:
              public_address: [ SELF, public_address ]
              private_address: [ SELF, private_address ]
              id: [ SELF, id ]
            implementation: ../ansible/compute--create.yaml
